// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BlogEditor should add and submit values successfully in add mode 1`] = `
<BlogEditor
  data={
    Object {
      "applications": Array [
        Object {
          "avatar": "avatarURL",
          "name": "Joe",
        },
      ],
      "id": "3",
      "isActive": true,
      "isHidden": true,
      "title": Object {
        "department": "MOCK_DEPARTMENT",
        "title": "MOCK_TITLE",
      },
    }
  }
  dataSelector="MOCK_DATA_SELECTOR"
  mode="add"
  setDialogProps={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updateBlogData={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "id": "3",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <WithStyles(ForwardRef(Dialog))
    data-selector="MOCK_DATA_SELECTOR"
    fullWidth={true}
    maxWidth="sm"
    onClose={[Function]}
    open={true}
  >
    <ForwardRef(Dialog)
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      data-selector="MOCK_DATA_SELECTOR"
      fullWidth={true}
      maxWidth="sm"
      onClose={[Function]}
      open={true}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root"
        closeAfterTransition={true}
        data-selector="MOCK_DATA_SELECTOR"
        disableBackdropClick={false}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={true}
      >
        <ForwardRef(Portal)
          disablePortal={false}
        >
          <Portal
            containerInfo={
              <body
                style="padding-right: 0px; overflow: hidden;"
              >
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Edit Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <hr
                                class="MuiDivider-root"
                              />
                              <div>
                                <h6
                                  class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                >
                                  Applicants
                                </h6>
                                <div
                                  class="makeStyles-applicant-2"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                  >
                                    <img
                                      class="MuiAvatar-img"
                                      src="avatarURL"
                                    />
                                  </div>
                                  <div>
                                    Joe
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="edit-form-submit"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector=""
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined Mui-error Mui-error Mui-focused Mui-focused Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk Mui-error Mui-error"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root Mui-error Mui-error MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                >
                                  <input
                                    aria-describedby="job-title-helper-text"
                                    aria-invalid="true"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                <p
                                  class="MuiFormHelperText-root MuiFormHelperText-contained Mui-error Mui-focused Mui-required"
                                  id="job-title-helper-text"
                                >
                                  This is required field
                                </p>
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined Mui-required Mui-required"
                                  data-shrink="false"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled Mui-disabled"
                            data-selector="submit-addForm"
                            disabled=""
                            tabindex="-1"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary Mui-disabled Mui-disabled"
                            data-selector="submit-addForm-draft"
                            disabled=""
                            tabindex="-1"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="submit-addForm"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                            data-selector="submit-addForm-draft"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="MuiDialog-root"
              data-selector="MOCK_DATA_SELECTOR"
              onKeyDown={[Function]}
              role="presentation"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 1300,
                }
              }
            >
              <WithStyles(ForwardRef(Backdrop))
                onClick={[Function]}
                open={true}
                transitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
              >
                <ForwardRef(Backdrop)
                  classes={
                    Object {
                      "invisible": "MuiBackdrop-invisible",
                      "root": "MuiBackdrop-root",
                    }
                  }
                  onClick={[Function]}
                  open={true}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <ForwardRef(Fade)
                    in={true}
                    onClick={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <Transition
                      appear={true}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onClick={[Function]}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <div
                        aria-hidden={true}
                        className="MuiBackdrop-root"
                        onClick={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                            "visibility": undefined,
                          }
                        }
                      />
                    </Transition>
                  </ForwardRef(Fade)>
                </ForwardRef(Backdrop)>
              </WithStyles(ForwardRef(Backdrop))>
              <Unstable_TrapFocus
                disableAutoFocus={false}
                disableEnforceFocus={false}
                disableRestoreFocus={false}
                getDoc={[Function]}
                isEnabled={[Function]}
                open={true}
              >
                <div
                  data-test="sentinelStart"
                  tabIndex={0}
                />
                <ForwardRef(Fade)
                  appear={true}
                  in={true}
                  onEnter={[Function]}
                  onExited={[Function]}
                  role="none presentation"
                  tabIndex="-1"
                  timeout={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <Transition
                    appear={true}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    role="none presentation"
                    tabIndex="-1"
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <div
                      className="MuiDialog-container MuiDialog-scrollPaper"
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      role="none presentation"
                      style={
                        Object {
                          "opacity": 1,
                          "visibility": undefined,
                        }
                      }
                      tabIndex="-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                        elevation={24}
                        role="dialog"
                      >
                        <ForwardRef(Paper)
                          className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "outlined": "MuiPaper-outlined",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                          elevation={24}
                          role="dialog"
                        >
                          <div
                            className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                            role="dialog"
                          >
                            <WithStyles(ForwardRef(DialogContent))>
                              <ForwardRef(DialogContent)
                                classes={
                                  Object {
                                    "dividers": "MuiDialogContent-dividers",
                                    "root": "MuiDialogContent-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogContent-root"
                                >
                                  <WithStyles(ForwardRef(DialogTitle))>
                                    <ForwardRef(DialogTitle)
                                      classes={
                                        Object {
                                          "root": "MuiDialogTitle-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogTitle-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          component="h2"
                                          variant="h6"
                                        >
                                          <ForwardRef(Typography)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            component="h2"
                                            variant="h6"
                                          >
                                            <h2
                                              className="MuiTypography-root MuiTypography-h6"
                                            >
                                              Add Job
                                            </h2>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(DialogTitle)>
                                  </WithStyles(ForwardRef(DialogTitle))>
                                  <WithStyles(ForwardRef(DialogContent))>
                                    <ForwardRef(DialogContent)
                                      classes={
                                        Object {
                                          "dividers": "MuiDialogContent-dividers",
                                          "root": "MuiDialogContent-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogContent-root"
                                      >
                                        <div>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(TextField))
                                                  autoComplete="true"
                                                  autoFocus={true}
                                                  data-selector="job-title-field"
                                                  error={false}
                                                  fullWidth={true}
                                                  helperText=""
                                                  id="job-title"
                                                  label="Job Title"
                                                  margin="normal"
                                                  name="job_title"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value="MOCK_TITLE"
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    autoComplete="true"
                                                    autoFocus={true}
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    data-selector="job-title-field"
                                                    error={false}
                                                    fullWidth={true}
                                                    helperText=""
                                                    id="job-title"
                                                    label="Job Title"
                                                    margin="normal"
                                                    name="job_title"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value="MOCK_TITLE"
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      data-selector="job-title-field"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      margin="normal"
                                                      required={true}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        data-selector="job-title-field"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        margin="normal"
                                                        required={true}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                          data-selector="job-title-field"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor="job-title"
                                                            id="job-title-label"
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                              htmlFor="job-title"
                                                              id="job-title-label"
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor="job-title"
                                                                id="job-title-label"
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={true}
                                                                  htmlFor="job-title"
                                                                  id="job-title-label"
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-focused Mui-focused Mui-required Mui-required"
                                                                    data-shrink={true}
                                                                    htmlFor="job-title"
                                                                    id="job-title-label"
                                                                  >
                                                                    Job Title
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            autoComplete="true"
                                                            autoFocus={true}
                                                            fullWidth={true}
                                                            id="job-title"
                                                            label={
                                                              <React.Fragment>
                                                                Job Title
                                                                 *
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="job_title"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value="MOCK_TITLE"
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoComplete="true"
                                                              autoFocus={true}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="job-title"
                                                              label={
                                                                <React.Fragment>
                                                                  Job Title
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="job_title"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value="MOCK_TITLE"
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoComplete="true"
                                                                autoFocus={true}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="job-title"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="job_title"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value="MOCK_TITLE"
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoComplete="true"
                                                                  autoFocus={true}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="job-title"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="job_title"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value="MOCK_TITLE"
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoComplete="true"
                                                                      autoFocus={true}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      id="job-title"
                                                                      name="job_title"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value="MOCK_TITLE"
                                                                    />
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      label={
                                                                        <React.Fragment>
                                                                          Job Title
                                                                           *
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={true}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-7",
                                                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-8",
                                                                            "legendNotched": "PrivateNotchedOutline-legendNotched-9",
                                                                            "root": "PrivateNotchedOutline-root-6",
                                                                          }
                                                                        }
                                                                        label={
                                                                          <React.Fragment>
                                                                            Job Title
                                                                             *
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={true}
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                                                          >
                                                                            <span>
                                                                              Job Title
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                                <WithStyles(ForwardRef(TextField))
                                                  data-selector="job-department-field"
                                                  error={false}
                                                  fullWidth={true}
                                                  helperText=""
                                                  id="job-department"
                                                  label="Job Department"
                                                  margin="normal"
                                                  name="job_department"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value="MOCK_DEPARTMENT"
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    data-selector="job-department-field"
                                                    error={false}
                                                    fullWidth={true}
                                                    helperText=""
                                                    id="job-department"
                                                    label="Job Department"
                                                    margin="normal"
                                                    name="job_department"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value="MOCK_DEPARTMENT"
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      data-selector="job-department-field"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      margin="normal"
                                                      required={true}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        data-selector="job-department-field"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        margin="normal"
                                                        required={true}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                          data-selector="job-department-field"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor="job-department"
                                                            id="job-department-label"
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                              htmlFor="job-department"
                                                              id="job-department-label"
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor="job-department"
                                                                id="job-department-label"
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={true}
                                                                  htmlFor="job-department"
                                                                  id="job-department-label"
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                                                    data-shrink={true}
                                                                    htmlFor="job-department"
                                                                    id="job-department-label"
                                                                  >
                                                                    Job Department
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            autoFocus={false}
                                                            fullWidth={true}
                                                            id="job-department"
                                                            label={
                                                              <React.Fragment>
                                                                Job Department
                                                                 *
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="job_department"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value="MOCK_DEPARTMENT"
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="job-department"
                                                              label={
                                                                <React.Fragment>
                                                                  Job Department
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="job_department"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value="MOCK_DEPARTMENT"
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="job-department"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="job_department"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value="MOCK_DEPARTMENT"
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="job-department"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="job_department"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value="MOCK_DEPARTMENT"
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoFocus={false}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      id="job-department"
                                                                      name="job_department"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value="MOCK_DEPARTMENT"
                                                                    />
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      label={
                                                                        <React.Fragment>
                                                                          Job Department
                                                                           *
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={true}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-7",
                                                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-8",
                                                                            "legendNotched": "PrivateNotchedOutline-legendNotched-9",
                                                                            "root": "PrivateNotchedOutline-root-6",
                                                                          }
                                                                        }
                                                                        label={
                                                                          <React.Fragment>
                                                                            Job Department
                                                                             *
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={true}
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                                                          >
                                                                            <span>
                                                                              Job Department
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                        </div>
                                      </div>
                                    </ForwardRef(DialogContent)>
                                  </WithStyles(ForwardRef(DialogContent))>
                                  <WithStyles(ForwardRef(DialogActions))>
                                    <ForwardRef(DialogActions)
                                      classes={
                                        Object {
                                          "root": "MuiDialogActions-root",
                                          "spacing": "MuiDialogActions-spacing",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogActions-root MuiDialogActions-spacing"
                                      >
                                        <WithStyles(ForwardRef(Button))
                                          color="primary"
                                          data-selector="submit-addForm"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="submit"
                                          variant="contained"
                                        >
                                          <ForwardRef(Button)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                "disableElevation": "MuiButton-disableElevation",
                                                "disabled": "Mui-disabled",
                                                "endIcon": "MuiButton-endIcon",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "startIcon": "MuiButton-startIcon",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                              }
                                            }
                                            color="primary"
                                            data-selector="submit-addForm"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="submit"
                                            variant="contained"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                              component="button"
                                              data-selector="submit-addForm"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                data-selector="submit-addForm"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="submit"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                  data-selector="submit-addForm"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="submit"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    Add
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                        <WithStyles(ForwardRef(Button))
                                          color="secondary"
                                          data-selector="submit-addForm-draft"
                                          disabled={false}
                                          onClick={[Function]}
                                          variant="text"
                                        >
                                          <ForwardRef(Button)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                "disableElevation": "MuiButton-disableElevation",
                                                "disabled": "Mui-disabled",
                                                "endIcon": "MuiButton-endIcon",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "startIcon": "MuiButton-startIcon",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                              }
                                            }
                                            color="secondary"
                                            data-selector="submit-addForm-draft"
                                            disabled={false}
                                            onClick={[Function]}
                                            variant="text"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-text MuiButton-textSecondary"
                                              component="button"
                                              data-selector="submit-addForm-draft"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-text MuiButton-textSecondary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                data-selector="submit-addForm-draft"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                                                  data-selector="submit-addForm-draft"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    Save as draft
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                      </div>
                                    </ForwardRef(DialogActions)>
                                  </WithStyles(ForwardRef(DialogActions))>
                                </div>
                              </ForwardRef(DialogContent)>
                            </WithStyles(ForwardRef(DialogContent))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </div>
                  </Transition>
                </ForwardRef(Fade)>
                <div
                  data-test="sentinelEnd"
                  tabIndex={0}
                />
              </Unstable_TrapFocus>
            </div>
          </Portal>
        </ForwardRef(Portal)>
      </ForwardRef(Modal)>
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
</BlogEditor>
`;

exports[`BlogEditor should add and submit values successfully in add mode API ERROR 1`] = `
<BlogEditor
  data={
    Object {
      "applications": Array [
        Object {
          "avatar": "avatarURL",
          "name": "Joe",
        },
      ],
      "id": "3",
      "isActive": true,
      "isHidden": true,
      "title": Object {
        "department": "MOCK_DEPARTMENT",
        "title": "MOCK_TITLE",
      },
    }
  }
  dataSelector="MOCK_DATA_SELECTOR"
  mode="add"
  setDialogProps={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updateBlogData={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "id": "3",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <WithStyles(ForwardRef(Dialog))
    data-selector="MOCK_DATA_SELECTOR"
    fullWidth={true}
    maxWidth="sm"
    onClose={[Function]}
    open={true}
  >
    <ForwardRef(Dialog)
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      data-selector="MOCK_DATA_SELECTOR"
      fullWidth={true}
      maxWidth="sm"
      onClose={[Function]}
      open={true}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root"
        closeAfterTransition={true}
        data-selector="MOCK_DATA_SELECTOR"
        disableBackdropClick={false}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={true}
      >
        <ForwardRef(Portal)
          disablePortal={false}
        >
          <Portal
            containerInfo={
              <body
                style="padding-right: 0px; overflow: hidden;"
              >
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Edit Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <hr
                                class="MuiDivider-root"
                              />
                              <div>
                                <h6
                                  class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                >
                                  Applicants
                                </h6>
                                <div
                                  class="makeStyles-applicant-2"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                  >
                                    <img
                                      class="MuiAvatar-img"
                                      src="avatarURL"
                                    />
                                  </div>
                                  <div>
                                    Joe
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="edit-form-submit"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector=""
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined Mui-error Mui-error Mui-focused Mui-focused Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk Mui-error Mui-error"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root Mui-error Mui-error MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                >
                                  <input
                                    aria-describedby="job-title-helper-text"
                                    aria-invalid="true"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                <p
                                  class="MuiFormHelperText-root MuiFormHelperText-contained Mui-error Mui-focused Mui-required"
                                  id="job-title-helper-text"
                                >
                                  This is required field
                                </p>
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined Mui-required Mui-required"
                                  data-shrink="false"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled Mui-disabled"
                            data-selector="submit-addForm"
                            disabled=""
                            tabindex="-1"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary Mui-disabled Mui-disabled"
                            data-selector="submit-addForm-draft"
                            disabled=""
                            tabindex="-1"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="submit-addForm"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                            data-selector="submit-addForm-draft"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="submit-addForm"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                            data-selector="submit-addForm-draft"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="MuiDialog-root"
              data-selector="MOCK_DATA_SELECTOR"
              onKeyDown={[Function]}
              role="presentation"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 1300,
                }
              }
            >
              <WithStyles(ForwardRef(Backdrop))
                onClick={[Function]}
                open={true}
                transitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
              >
                <ForwardRef(Backdrop)
                  classes={
                    Object {
                      "invisible": "MuiBackdrop-invisible",
                      "root": "MuiBackdrop-root",
                    }
                  }
                  onClick={[Function]}
                  open={true}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <ForwardRef(Fade)
                    in={true}
                    onClick={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <Transition
                      appear={true}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onClick={[Function]}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <div
                        aria-hidden={true}
                        className="MuiBackdrop-root"
                        onClick={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                            "visibility": undefined,
                          }
                        }
                      />
                    </Transition>
                  </ForwardRef(Fade)>
                </ForwardRef(Backdrop)>
              </WithStyles(ForwardRef(Backdrop))>
              <Unstable_TrapFocus
                disableAutoFocus={false}
                disableEnforceFocus={false}
                disableRestoreFocus={false}
                getDoc={[Function]}
                isEnabled={[Function]}
                open={true}
              >
                <div
                  data-test="sentinelStart"
                  tabIndex={0}
                />
                <ForwardRef(Fade)
                  appear={true}
                  in={true}
                  onEnter={[Function]}
                  onExited={[Function]}
                  role="none presentation"
                  tabIndex="-1"
                  timeout={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <Transition
                    appear={true}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    role="none presentation"
                    tabIndex="-1"
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <div
                      className="MuiDialog-container MuiDialog-scrollPaper"
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      role="none presentation"
                      style={
                        Object {
                          "opacity": 1,
                          "visibility": undefined,
                        }
                      }
                      tabIndex="-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                        elevation={24}
                        role="dialog"
                      >
                        <ForwardRef(Paper)
                          className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "outlined": "MuiPaper-outlined",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                          elevation={24}
                          role="dialog"
                        >
                          <div
                            className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                            role="dialog"
                          >
                            <WithStyles(ForwardRef(DialogContent))>
                              <ForwardRef(DialogContent)
                                classes={
                                  Object {
                                    "dividers": "MuiDialogContent-dividers",
                                    "root": "MuiDialogContent-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogContent-root"
                                >
                                  <WithStyles(ForwardRef(DialogTitle))>
                                    <ForwardRef(DialogTitle)
                                      classes={
                                        Object {
                                          "root": "MuiDialogTitle-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogTitle-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          component="h2"
                                          variant="h6"
                                        >
                                          <ForwardRef(Typography)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            component="h2"
                                            variant="h6"
                                          >
                                            <h2
                                              className="MuiTypography-root MuiTypography-h6"
                                            >
                                              Add Job
                                            </h2>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(DialogTitle)>
                                  </WithStyles(ForwardRef(DialogTitle))>
                                  <WithStyles(ForwardRef(DialogContent))>
                                    <ForwardRef(DialogContent)
                                      classes={
                                        Object {
                                          "dividers": "MuiDialogContent-dividers",
                                          "root": "MuiDialogContent-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogContent-root"
                                      >
                                        <div>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(TextField))
                                                  autoComplete="true"
                                                  autoFocus={true}
                                                  data-selector="job-title-field"
                                                  error={false}
                                                  fullWidth={true}
                                                  helperText=""
                                                  id="job-title"
                                                  label="Job Title"
                                                  margin="normal"
                                                  name="job_title"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value="MOCK_TITLE"
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    autoComplete="true"
                                                    autoFocus={true}
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    data-selector="job-title-field"
                                                    error={false}
                                                    fullWidth={true}
                                                    helperText=""
                                                    id="job-title"
                                                    label="Job Title"
                                                    margin="normal"
                                                    name="job_title"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value="MOCK_TITLE"
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      data-selector="job-title-field"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      margin="normal"
                                                      required={true}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        data-selector="job-title-field"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        margin="normal"
                                                        required={true}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                          data-selector="job-title-field"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor="job-title"
                                                            id="job-title-label"
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                              htmlFor="job-title"
                                                              id="job-title-label"
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor="job-title"
                                                                id="job-title-label"
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={true}
                                                                  htmlFor="job-title"
                                                                  id="job-title-label"
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-focused Mui-focused Mui-required Mui-required"
                                                                    data-shrink={true}
                                                                    htmlFor="job-title"
                                                                    id="job-title-label"
                                                                  >
                                                                    Job Title
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            autoComplete="true"
                                                            autoFocus={true}
                                                            fullWidth={true}
                                                            id="job-title"
                                                            label={
                                                              <React.Fragment>
                                                                Job Title
                                                                 *
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="job_title"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value="MOCK_TITLE"
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoComplete="true"
                                                              autoFocus={true}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="job-title"
                                                              label={
                                                                <React.Fragment>
                                                                  Job Title
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="job_title"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value="MOCK_TITLE"
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoComplete="true"
                                                                autoFocus={true}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="job-title"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="job_title"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value="MOCK_TITLE"
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoComplete="true"
                                                                  autoFocus={true}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="job-title"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="job_title"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value="MOCK_TITLE"
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoComplete="true"
                                                                      autoFocus={true}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      id="job-title"
                                                                      name="job_title"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value="MOCK_TITLE"
                                                                    />
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      label={
                                                                        <React.Fragment>
                                                                          Job Title
                                                                           *
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={true}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-7",
                                                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-8",
                                                                            "legendNotched": "PrivateNotchedOutline-legendNotched-9",
                                                                            "root": "PrivateNotchedOutline-root-6",
                                                                          }
                                                                        }
                                                                        label={
                                                                          <React.Fragment>
                                                                            Job Title
                                                                             *
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={true}
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                                                          >
                                                                            <span>
                                                                              Job Title
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                                <WithStyles(ForwardRef(TextField))
                                                  data-selector="job-department-field"
                                                  error={false}
                                                  fullWidth={true}
                                                  helperText=""
                                                  id="job-department"
                                                  label="Job Department"
                                                  margin="normal"
                                                  name="job_department"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value="MOCK_DEPARTMENT"
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    data-selector="job-department-field"
                                                    error={false}
                                                    fullWidth={true}
                                                    helperText=""
                                                    id="job-department"
                                                    label="Job Department"
                                                    margin="normal"
                                                    name="job_department"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value="MOCK_DEPARTMENT"
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      data-selector="job-department-field"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      margin="normal"
                                                      required={true}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        data-selector="job-department-field"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        margin="normal"
                                                        required={true}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                          data-selector="job-department-field"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor="job-department"
                                                            id="job-department-label"
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                              htmlFor="job-department"
                                                              id="job-department-label"
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor="job-department"
                                                                id="job-department-label"
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={true}
                                                                  htmlFor="job-department"
                                                                  id="job-department-label"
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                                                    data-shrink={true}
                                                                    htmlFor="job-department"
                                                                    id="job-department-label"
                                                                  >
                                                                    Job Department
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            autoFocus={false}
                                                            fullWidth={true}
                                                            id="job-department"
                                                            label={
                                                              <React.Fragment>
                                                                Job Department
                                                                 *
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="job_department"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value="MOCK_DEPARTMENT"
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="job-department"
                                                              label={
                                                                <React.Fragment>
                                                                  Job Department
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="job_department"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value="MOCK_DEPARTMENT"
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="job-department"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="job_department"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value="MOCK_DEPARTMENT"
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="job-department"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="job_department"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value="MOCK_DEPARTMENT"
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoFocus={false}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      id="job-department"
                                                                      name="job_department"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value="MOCK_DEPARTMENT"
                                                                    />
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      label={
                                                                        <React.Fragment>
                                                                          Job Department
                                                                           *
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={true}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-7",
                                                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-8",
                                                                            "legendNotched": "PrivateNotchedOutline-legendNotched-9",
                                                                            "root": "PrivateNotchedOutline-root-6",
                                                                          }
                                                                        }
                                                                        label={
                                                                          <React.Fragment>
                                                                            Job Department
                                                                             *
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={true}
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                                                          >
                                                                            <span>
                                                                              Job Department
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                        </div>
                                      </div>
                                    </ForwardRef(DialogContent)>
                                  </WithStyles(ForwardRef(DialogContent))>
                                  <WithStyles(ForwardRef(DialogActions))>
                                    <ForwardRef(DialogActions)
                                      classes={
                                        Object {
                                          "root": "MuiDialogActions-root",
                                          "spacing": "MuiDialogActions-spacing",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogActions-root MuiDialogActions-spacing"
                                      >
                                        <WithStyles(ForwardRef(Button))
                                          color="primary"
                                          data-selector="submit-addForm"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="submit"
                                          variant="contained"
                                        >
                                          <ForwardRef(Button)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                "disableElevation": "MuiButton-disableElevation",
                                                "disabled": "Mui-disabled",
                                                "endIcon": "MuiButton-endIcon",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "startIcon": "MuiButton-startIcon",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                              }
                                            }
                                            color="primary"
                                            data-selector="submit-addForm"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="submit"
                                            variant="contained"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                              component="button"
                                              data-selector="submit-addForm"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                data-selector="submit-addForm"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="submit"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                  data-selector="submit-addForm"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="submit"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    Add
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                        <WithStyles(ForwardRef(Button))
                                          color="secondary"
                                          data-selector="submit-addForm-draft"
                                          disabled={false}
                                          onClick={[Function]}
                                          variant="text"
                                        >
                                          <ForwardRef(Button)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                "disableElevation": "MuiButton-disableElevation",
                                                "disabled": "Mui-disabled",
                                                "endIcon": "MuiButton-endIcon",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "startIcon": "MuiButton-startIcon",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                              }
                                            }
                                            color="secondary"
                                            data-selector="submit-addForm-draft"
                                            disabled={false}
                                            onClick={[Function]}
                                            variant="text"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-text MuiButton-textSecondary"
                                              component="button"
                                              data-selector="submit-addForm-draft"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-text MuiButton-textSecondary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                data-selector="submit-addForm-draft"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                                                  data-selector="submit-addForm-draft"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    Save as draft
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                      </div>
                                    </ForwardRef(DialogActions)>
                                  </WithStyles(ForwardRef(DialogActions))>
                                </div>
                              </ForwardRef(DialogContent)>
                            </WithStyles(ForwardRef(DialogContent))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </div>
                  </Transition>
                </ForwardRef(Fade)>
                <div
                  data-test="sentinelEnd"
                  tabIndex={0}
                />
              </Unstable_TrapFocus>
            </div>
          </Portal>
        </ForwardRef(Portal)>
      </ForwardRef(Modal)>
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
</BlogEditor>
`;

exports[`BlogEditor should edit and submit values successfully in edit mode 1`] = `
<BlogEditor
  data={
    Object {
      "applications": Array [
        Object {
          "avatar": "avatarURL",
          "name": "Joe",
        },
      ],
      "id": "3",
      "isActive": true,
      "isHidden": true,
      "title": Object {
        "department": "MOCK_DEPARTMENT",
        "title": "MOCK_TITLE",
      },
    }
  }
  dataSelector="MOCK_DATA_SELECTOR"
  mode="edit"
  setDialogProps={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updateBlogData={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "id": "3",
          },
        ],
        Array [
          Object {
            "id": "3",
          },
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <WithStyles(ForwardRef(Dialog))
    data-selector="MOCK_DATA_SELECTOR"
    fullWidth={true}
    maxWidth="sm"
    onClose={[Function]}
    open={true}
  >
    <ForwardRef(Dialog)
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      data-selector="MOCK_DATA_SELECTOR"
      fullWidth={true}
      maxWidth="sm"
      onClose={[Function]}
      open={true}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root"
        closeAfterTransition={true}
        data-selector="MOCK_DATA_SELECTOR"
        disableBackdropClick={false}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={true}
      >
        <ForwardRef(Portal)
          disablePortal={false}
        >
          <Portal
            containerInfo={
              <body
                style="padding-right: 0px; overflow: hidden;"
              >
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Edit Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <hr
                                class="MuiDivider-root"
                              />
                              <div>
                                <h6
                                  class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                >
                                  Applicants
                                </h6>
                                <div
                                  class="makeStyles-applicant-2"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                  >
                                    <img
                                      class="MuiAvatar-img"
                                      src="avatarURL"
                                    />
                                  </div>
                                  <div>
                                    Joe
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="edit-form-submit"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector=""
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined Mui-error Mui-error Mui-focused Mui-focused Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk Mui-error Mui-error"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root Mui-error Mui-error MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                >
                                  <input
                                    aria-describedby="job-title-helper-text"
                                    aria-invalid="true"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                <p
                                  class="MuiFormHelperText-root MuiFormHelperText-contained Mui-error Mui-focused Mui-required"
                                  id="job-title-helper-text"
                                >
                                  This is required field
                                </p>
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined Mui-required Mui-required"
                                  data-shrink="false"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled Mui-disabled"
                            data-selector="submit-addForm"
                            disabled=""
                            tabindex="-1"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary Mui-disabled Mui-disabled"
                            data-selector="submit-addForm-draft"
                            disabled=""
                            tabindex="-1"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="submit-addForm"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                            data-selector="submit-addForm-draft"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="submit-addForm"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                            data-selector="submit-addForm-draft"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Edit Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <hr
                                class="MuiDivider-root"
                              />
                              <div>
                                <h6
                                  class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                >
                                  Applicants
                                </h6>
                                <div
                                  class="makeStyles-applicant-2"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                  >
                                    <img
                                      class="MuiAvatar-img"
                                      src="avatarURL"
                                    />
                                  </div>
                                  <div>
                                    Joe
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="edit-form-submit"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="MuiDialog-root"
              data-selector="MOCK_DATA_SELECTOR"
              onKeyDown={[Function]}
              role="presentation"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 1300,
                }
              }
            >
              <WithStyles(ForwardRef(Backdrop))
                onClick={[Function]}
                open={true}
                transitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
              >
                <ForwardRef(Backdrop)
                  classes={
                    Object {
                      "invisible": "MuiBackdrop-invisible",
                      "root": "MuiBackdrop-root",
                    }
                  }
                  onClick={[Function]}
                  open={true}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <ForwardRef(Fade)
                    in={true}
                    onClick={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <Transition
                      appear={true}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onClick={[Function]}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <div
                        aria-hidden={true}
                        className="MuiBackdrop-root"
                        onClick={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                            "visibility": undefined,
                          }
                        }
                      />
                    </Transition>
                  </ForwardRef(Fade)>
                </ForwardRef(Backdrop)>
              </WithStyles(ForwardRef(Backdrop))>
              <Unstable_TrapFocus
                disableAutoFocus={false}
                disableEnforceFocus={false}
                disableRestoreFocus={false}
                getDoc={[Function]}
                isEnabled={[Function]}
                open={true}
              >
                <div
                  data-test="sentinelStart"
                  tabIndex={0}
                />
                <ForwardRef(Fade)
                  appear={true}
                  in={true}
                  onEnter={[Function]}
                  onExited={[Function]}
                  role="none presentation"
                  tabIndex="-1"
                  timeout={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <Transition
                    appear={true}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    role="none presentation"
                    tabIndex="-1"
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <div
                      className="MuiDialog-container MuiDialog-scrollPaper"
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      role="none presentation"
                      style={
                        Object {
                          "opacity": 1,
                          "visibility": undefined,
                        }
                      }
                      tabIndex="-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                        elevation={24}
                        role="dialog"
                      >
                        <ForwardRef(Paper)
                          className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "outlined": "MuiPaper-outlined",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                          elevation={24}
                          role="dialog"
                        >
                          <div
                            className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                            role="dialog"
                          >
                            <WithStyles(ForwardRef(DialogContent))>
                              <ForwardRef(DialogContent)
                                classes={
                                  Object {
                                    "dividers": "MuiDialogContent-dividers",
                                    "root": "MuiDialogContent-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogContent-root"
                                >
                                  <WithStyles(ForwardRef(DialogTitle))>
                                    <ForwardRef(DialogTitle)
                                      classes={
                                        Object {
                                          "root": "MuiDialogTitle-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogTitle-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          component="h2"
                                          variant="h6"
                                        >
                                          <ForwardRef(Typography)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            component="h2"
                                            variant="h6"
                                          >
                                            <h2
                                              className="MuiTypography-root MuiTypography-h6"
                                            >
                                              Edit Job
                                            </h2>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(DialogTitle)>
                                  </WithStyles(ForwardRef(DialogTitle))>
                                  <WithStyles(ForwardRef(DialogContent))>
                                    <ForwardRef(DialogContent)
                                      classes={
                                        Object {
                                          "dividers": "MuiDialogContent-dividers",
                                          "root": "MuiDialogContent-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogContent-root"
                                      >
                                        <div>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(TextField))
                                                  autoComplete="true"
                                                  autoFocus={true}
                                                  data-selector="job-title-field"
                                                  error={false}
                                                  fullWidth={true}
                                                  helperText=""
                                                  id="job-title"
                                                  label="Job Title"
                                                  margin="normal"
                                                  name="job_title"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value="MOCK_TITLE"
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    autoComplete="true"
                                                    autoFocus={true}
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    data-selector="job-title-field"
                                                    error={false}
                                                    fullWidth={true}
                                                    helperText=""
                                                    id="job-title"
                                                    label="Job Title"
                                                    margin="normal"
                                                    name="job_title"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value="MOCK_TITLE"
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      data-selector="job-title-field"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      margin="normal"
                                                      required={true}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        data-selector="job-title-field"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        margin="normal"
                                                        required={true}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                          data-selector="job-title-field"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor="job-title"
                                                            id="job-title-label"
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                              htmlFor="job-title"
                                                              id="job-title-label"
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor="job-title"
                                                                id="job-title-label"
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={true}
                                                                  htmlFor="job-title"
                                                                  id="job-title-label"
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-focused Mui-focused Mui-required Mui-required"
                                                                    data-shrink={true}
                                                                    htmlFor="job-title"
                                                                    id="job-title-label"
                                                                  >
                                                                    Job Title
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            autoComplete="true"
                                                            autoFocus={true}
                                                            fullWidth={true}
                                                            id="job-title"
                                                            label={
                                                              <React.Fragment>
                                                                Job Title
                                                                 *
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="job_title"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value="MOCK_TITLE"
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoComplete="true"
                                                              autoFocus={true}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="job-title"
                                                              label={
                                                                <React.Fragment>
                                                                  Job Title
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="job_title"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value="MOCK_TITLE"
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoComplete="true"
                                                                autoFocus={true}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="job-title"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="job_title"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value="MOCK_TITLE"
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoComplete="true"
                                                                  autoFocus={true}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="job-title"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="job_title"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value="MOCK_TITLE"
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoComplete="true"
                                                                      autoFocus={true}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      id="job-title"
                                                                      name="job_title"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value="MOCK_TITLE"
                                                                    />
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      label={
                                                                        <React.Fragment>
                                                                          Job Title
                                                                           *
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={true}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-7",
                                                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-8",
                                                                            "legendNotched": "PrivateNotchedOutline-legendNotched-9",
                                                                            "root": "PrivateNotchedOutline-root-6",
                                                                          }
                                                                        }
                                                                        label={
                                                                          <React.Fragment>
                                                                            Job Title
                                                                             *
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={true}
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                                                          >
                                                                            <span>
                                                                              Job Title
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                                <WithStyles(ForwardRef(TextField))
                                                  data-selector="job-department-field"
                                                  error={false}
                                                  fullWidth={true}
                                                  helperText=""
                                                  id="job-department"
                                                  label="Job Department"
                                                  margin="normal"
                                                  name="job_department"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value="MOCK_DEPARTMENT"
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    data-selector="job-department-field"
                                                    error={false}
                                                    fullWidth={true}
                                                    helperText=""
                                                    id="job-department"
                                                    label="Job Department"
                                                    margin="normal"
                                                    name="job_department"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value="MOCK_DEPARTMENT"
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      data-selector="job-department-field"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      margin="normal"
                                                      required={true}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        data-selector="job-department-field"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        margin="normal"
                                                        required={true}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                          data-selector="job-department-field"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor="job-department"
                                                            id="job-department-label"
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                              htmlFor="job-department"
                                                              id="job-department-label"
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor="job-department"
                                                                id="job-department-label"
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={true}
                                                                  htmlFor="job-department"
                                                                  id="job-department-label"
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                                                    data-shrink={true}
                                                                    htmlFor="job-department"
                                                                    id="job-department-label"
                                                                  >
                                                                    Job Department
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            autoFocus={false}
                                                            fullWidth={true}
                                                            id="job-department"
                                                            label={
                                                              <React.Fragment>
                                                                Job Department
                                                                 *
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="job_department"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value="MOCK_DEPARTMENT"
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="job-department"
                                                              label={
                                                                <React.Fragment>
                                                                  Job Department
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="job_department"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value="MOCK_DEPARTMENT"
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="job-department"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="job_department"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value="MOCK_DEPARTMENT"
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="job-department"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="job_department"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value="MOCK_DEPARTMENT"
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoFocus={false}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      id="job-department"
                                                                      name="job_department"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value="MOCK_DEPARTMENT"
                                                                    />
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      label={
                                                                        <React.Fragment>
                                                                          Job Department
                                                                           *
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={true}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-7",
                                                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-8",
                                                                            "legendNotched": "PrivateNotchedOutline-legendNotched-9",
                                                                            "root": "PrivateNotchedOutline-root-6",
                                                                          }
                                                                        }
                                                                        label={
                                                                          <React.Fragment>
                                                                            Job Department
                                                                             *
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={true}
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                                                          >
                                                                            <span>
                                                                              Job Department
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                                <WithStyles(ForwardRef(Divider))
                                                  variant="fullWidth"
                                                >
                                                  <ForwardRef(Divider)
                                                    classes={
                                                      Object {
                                                        "absolute": "MuiDivider-absolute",
                                                        "flexItem": "MuiDivider-flexItem",
                                                        "inset": "MuiDivider-inset",
                                                        "light": "MuiDivider-light",
                                                        "middle": "MuiDivider-middle",
                                                        "root": "MuiDivider-root",
                                                        "vertical": "MuiDivider-vertical",
                                                      }
                                                    }
                                                    variant="fullWidth"
                                                  >
                                                    <hr
                                                      className="MuiDivider-root"
                                                    />
                                                  </ForwardRef(Divider)>
                                                </WithStyles(ForwardRef(Divider))>
                                                <div>
                                                  <WithStyles(ForwardRef(Typography))
                                                    className="makeStyles-applicantTitle-1"
                                                    variant="h6"
                                                  >
                                                    <ForwardRef(Typography)
                                                      className="makeStyles-applicantTitle-1"
                                                      classes={
                                                        Object {
                                                          "alignCenter": "MuiTypography-alignCenter",
                                                          "alignJustify": "MuiTypography-alignJustify",
                                                          "alignLeft": "MuiTypography-alignLeft",
                                                          "alignRight": "MuiTypography-alignRight",
                                                          "body1": "MuiTypography-body1",
                                                          "body2": "MuiTypography-body2",
                                                          "button": "MuiTypography-button",
                                                          "caption": "MuiTypography-caption",
                                                          "colorError": "MuiTypography-colorError",
                                                          "colorInherit": "MuiTypography-colorInherit",
                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                          "displayBlock": "MuiTypography-displayBlock",
                                                          "displayInline": "MuiTypography-displayInline",
                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                          "h1": "MuiTypography-h1",
                                                          "h2": "MuiTypography-h2",
                                                          "h3": "MuiTypography-h3",
                                                          "h4": "MuiTypography-h4",
                                                          "h5": "MuiTypography-h5",
                                                          "h6": "MuiTypography-h6",
                                                          "noWrap": "MuiTypography-noWrap",
                                                          "overline": "MuiTypography-overline",
                                                          "paragraph": "MuiTypography-paragraph",
                                                          "root": "MuiTypography-root",
                                                          "srOnly": "MuiTypography-srOnly",
                                                          "subtitle1": "MuiTypography-subtitle1",
                                                          "subtitle2": "MuiTypography-subtitle2",
                                                        }
                                                      }
                                                      variant="h6"
                                                    >
                                                      <h6
                                                        className="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                                      >
                                                        Applicants
                                                      </h6>
                                                    </ForwardRef(Typography)>
                                                  </WithStyles(ForwardRef(Typography))>
                                                  <div
                                                    className="makeStyles-applicant-2"
                                                    key="0"
                                                  >
                                                    <WithStyles(ForwardRef(Avatar))
                                                      className="makeStyles-applicantAvatar-3"
                                                      src="avatarURL"
                                                    >
                                                      <ForwardRef(Avatar)
                                                        className="makeStyles-applicantAvatar-3"
                                                        classes={
                                                          Object {
                                                            "circle": "MuiAvatar-circle",
                                                            "circular": "MuiAvatar-circular",
                                                            "colorDefault": "MuiAvatar-colorDefault",
                                                            "fallback": "MuiAvatar-fallback",
                                                            "img": "MuiAvatar-img",
                                                            "root": "MuiAvatar-root",
                                                            "rounded": "MuiAvatar-rounded",
                                                            "square": "MuiAvatar-square",
                                                          }
                                                        }
                                                        src="avatarURL"
                                                      >
                                                        <div
                                                          className="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                                        >
                                                          <img
                                                            className="MuiAvatar-img"
                                                            src="avatarURL"
                                                          />
                                                        </div>
                                                      </ForwardRef(Avatar)>
                                                    </WithStyles(ForwardRef(Avatar))>
                                                    <div>
                                                      Joe
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                        </div>
                                      </div>
                                    </ForwardRef(DialogContent)>
                                  </WithStyles(ForwardRef(DialogContent))>
                                  <WithStyles(ForwardRef(DialogActions))>
                                    <ForwardRef(DialogActions)
                                      classes={
                                        Object {
                                          "root": "MuiDialogActions-root",
                                          "spacing": "MuiDialogActions-spacing",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogActions-root MuiDialogActions-spacing"
                                      >
                                        <WithStyles(ForwardRef(Button))
                                          color="primary"
                                          data-selector="edit-form-submit"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="submit"
                                          variant="contained"
                                        >
                                          <ForwardRef(Button)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                "disableElevation": "MuiButton-disableElevation",
                                                "disabled": "Mui-disabled",
                                                "endIcon": "MuiButton-endIcon",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "startIcon": "MuiButton-startIcon",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                              }
                                            }
                                            color="primary"
                                            data-selector="edit-form-submit"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="submit"
                                            variant="contained"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                              component="button"
                                              data-selector="edit-form-submit"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                data-selector="edit-form-submit"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="submit"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                  data-selector="edit-form-submit"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="submit"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    Save
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                      </div>
                                    </ForwardRef(DialogActions)>
                                  </WithStyles(ForwardRef(DialogActions))>
                                </div>
                              </ForwardRef(DialogContent)>
                            </WithStyles(ForwardRef(DialogContent))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </div>
                  </Transition>
                </ForwardRef(Fade)>
                <div
                  data-test="sentinelEnd"
                  tabIndex={0}
                />
              </Unstable_TrapFocus>
            </div>
          </Portal>
        </ForwardRef(Portal)>
      </ForwardRef(Modal)>
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
</BlogEditor>
`;

exports[`BlogEditor should edit and submit values successfully in edit mode API Error 1`] = `
<BlogEditor
  data={
    Object {
      "applications": Array [
        Object {
          "avatar": "avatarURL",
          "name": "Joe",
        },
      ],
      "id": "3",
      "isActive": true,
      "isHidden": true,
      "title": Object {
        "department": "MOCK_DEPARTMENT",
        "title": "MOCK_TITLE",
      },
    }
  }
  dataSelector="MOCK_DATA_SELECTOR"
  mode="edit"
  setDialogProps={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updateBlogData={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "id": "3",
          },
        ],
        Array [
          Object {
            "id": "3",
          },
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <WithStyles(ForwardRef(Dialog))
    data-selector="MOCK_DATA_SELECTOR"
    fullWidth={true}
    maxWidth="sm"
    onClose={[Function]}
    open={true}
  >
    <ForwardRef(Dialog)
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      data-selector="MOCK_DATA_SELECTOR"
      fullWidth={true}
      maxWidth="sm"
      onClose={[Function]}
      open={true}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root"
        closeAfterTransition={true}
        data-selector="MOCK_DATA_SELECTOR"
        disableBackdropClick={false}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={true}
      >
        <ForwardRef(Portal)
          disablePortal={false}
        >
          <Portal
            containerInfo={
              <body
                style="padding-right: 0px; overflow: hidden;"
              >
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Edit Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <hr
                                class="MuiDivider-root"
                              />
                              <div>
                                <h6
                                  class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                >
                                  Applicants
                                </h6>
                                <div
                                  class="makeStyles-applicant-2"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                  >
                                    <img
                                      class="MuiAvatar-img"
                                      src="avatarURL"
                                    />
                                  </div>
                                  <div>
                                    Joe
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="edit-form-submit"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector=""
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined Mui-error Mui-error Mui-focused Mui-focused Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk Mui-error Mui-error"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root Mui-error Mui-error MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                >
                                  <input
                                    aria-describedby="job-title-helper-text"
                                    aria-invalid="true"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                <p
                                  class="MuiFormHelperText-root MuiFormHelperText-contained Mui-error Mui-focused Mui-required"
                                  id="job-title-helper-text"
                                >
                                  This is required field
                                </p>
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined Mui-required Mui-required"
                                  data-shrink="false"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled Mui-disabled"
                            data-selector="submit-addForm"
                            disabled=""
                            tabindex="-1"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary Mui-disabled Mui-disabled"
                            data-selector="submit-addForm-draft"
                            disabled=""
                            tabindex="-1"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="submit-addForm"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                            data-selector="submit-addForm-draft"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Edit Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <hr
                                class="MuiDivider-root"
                              />
                              <div>
                                <h6
                                  class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                >
                                  Applicants
                                </h6>
                                <div
                                  class="makeStyles-applicant-2"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                  >
                                    <img
                                      class="MuiAvatar-img"
                                      src="avatarURL"
                                    />
                                  </div>
                                  <div>
                                    Joe
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="edit-form-submit"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Edit Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <hr
                                class="MuiDivider-root"
                              />
                              <div>
                                <h6
                                  class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                >
                                  Applicants
                                </h6>
                                <div
                                  class="makeStyles-applicant-2"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                  >
                                    <img
                                      class="MuiAvatar-img"
                                      src="avatarURL"
                                    />
                                  </div>
                                  <div>
                                    Joe
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="edit-form-submit"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="MuiDialog-root"
              data-selector="MOCK_DATA_SELECTOR"
              onKeyDown={[Function]}
              role="presentation"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 1300,
                }
              }
            >
              <WithStyles(ForwardRef(Backdrop))
                onClick={[Function]}
                open={true}
                transitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
              >
                <ForwardRef(Backdrop)
                  classes={
                    Object {
                      "invisible": "MuiBackdrop-invisible",
                      "root": "MuiBackdrop-root",
                    }
                  }
                  onClick={[Function]}
                  open={true}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <ForwardRef(Fade)
                    in={true}
                    onClick={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <Transition
                      appear={true}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onClick={[Function]}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <div
                        aria-hidden={true}
                        className="MuiBackdrop-root"
                        onClick={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                            "visibility": undefined,
                          }
                        }
                      />
                    </Transition>
                  </ForwardRef(Fade)>
                </ForwardRef(Backdrop)>
              </WithStyles(ForwardRef(Backdrop))>
              <Unstable_TrapFocus
                disableAutoFocus={false}
                disableEnforceFocus={false}
                disableRestoreFocus={false}
                getDoc={[Function]}
                isEnabled={[Function]}
                open={true}
              >
                <div
                  data-test="sentinelStart"
                  tabIndex={0}
                />
                <ForwardRef(Fade)
                  appear={true}
                  in={true}
                  onEnter={[Function]}
                  onExited={[Function]}
                  role="none presentation"
                  tabIndex="-1"
                  timeout={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <Transition
                    appear={true}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    role="none presentation"
                    tabIndex="-1"
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <div
                      className="MuiDialog-container MuiDialog-scrollPaper"
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      role="none presentation"
                      style={
                        Object {
                          "opacity": 1,
                          "visibility": undefined,
                        }
                      }
                      tabIndex="-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                        elevation={24}
                        role="dialog"
                      >
                        <ForwardRef(Paper)
                          className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "outlined": "MuiPaper-outlined",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                          elevation={24}
                          role="dialog"
                        >
                          <div
                            className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                            role="dialog"
                          >
                            <WithStyles(ForwardRef(DialogContent))>
                              <ForwardRef(DialogContent)
                                classes={
                                  Object {
                                    "dividers": "MuiDialogContent-dividers",
                                    "root": "MuiDialogContent-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogContent-root"
                                >
                                  <WithStyles(ForwardRef(DialogTitle))>
                                    <ForwardRef(DialogTitle)
                                      classes={
                                        Object {
                                          "root": "MuiDialogTitle-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogTitle-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          component="h2"
                                          variant="h6"
                                        >
                                          <ForwardRef(Typography)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            component="h2"
                                            variant="h6"
                                          >
                                            <h2
                                              className="MuiTypography-root MuiTypography-h6"
                                            >
                                              Edit Job
                                            </h2>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(DialogTitle)>
                                  </WithStyles(ForwardRef(DialogTitle))>
                                  <WithStyles(ForwardRef(DialogContent))>
                                    <ForwardRef(DialogContent)
                                      classes={
                                        Object {
                                          "dividers": "MuiDialogContent-dividers",
                                          "root": "MuiDialogContent-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogContent-root"
                                      >
                                        <div>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(TextField))
                                                  autoComplete="true"
                                                  autoFocus={true}
                                                  data-selector="job-title-field"
                                                  error={false}
                                                  fullWidth={true}
                                                  helperText=""
                                                  id="job-title"
                                                  label="Job Title"
                                                  margin="normal"
                                                  name="job_title"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value="MOCK_TITLE"
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    autoComplete="true"
                                                    autoFocus={true}
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    data-selector="job-title-field"
                                                    error={false}
                                                    fullWidth={true}
                                                    helperText=""
                                                    id="job-title"
                                                    label="Job Title"
                                                    margin="normal"
                                                    name="job_title"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value="MOCK_TITLE"
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      data-selector="job-title-field"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      margin="normal"
                                                      required={true}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        data-selector="job-title-field"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        margin="normal"
                                                        required={true}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                          data-selector="job-title-field"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor="job-title"
                                                            id="job-title-label"
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                              htmlFor="job-title"
                                                              id="job-title-label"
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor="job-title"
                                                                id="job-title-label"
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={true}
                                                                  htmlFor="job-title"
                                                                  id="job-title-label"
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-focused Mui-focused Mui-required Mui-required"
                                                                    data-shrink={true}
                                                                    htmlFor="job-title"
                                                                    id="job-title-label"
                                                                  >
                                                                    Job Title
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            autoComplete="true"
                                                            autoFocus={true}
                                                            fullWidth={true}
                                                            id="job-title"
                                                            label={
                                                              <React.Fragment>
                                                                Job Title
                                                                 *
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="job_title"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value="MOCK_TITLE"
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoComplete="true"
                                                              autoFocus={true}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="job-title"
                                                              label={
                                                                <React.Fragment>
                                                                  Job Title
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="job_title"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value="MOCK_TITLE"
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoComplete="true"
                                                                autoFocus={true}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="job-title"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="job_title"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value="MOCK_TITLE"
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoComplete="true"
                                                                  autoFocus={true}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="job-title"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="job_title"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value="MOCK_TITLE"
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoComplete="true"
                                                                      autoFocus={true}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      id="job-title"
                                                                      name="job_title"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value="MOCK_TITLE"
                                                                    />
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      label={
                                                                        <React.Fragment>
                                                                          Job Title
                                                                           *
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={true}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-7",
                                                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-8",
                                                                            "legendNotched": "PrivateNotchedOutline-legendNotched-9",
                                                                            "root": "PrivateNotchedOutline-root-6",
                                                                          }
                                                                        }
                                                                        label={
                                                                          <React.Fragment>
                                                                            Job Title
                                                                             *
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={true}
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                                                          >
                                                                            <span>
                                                                              Job Title
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                                <WithStyles(ForwardRef(TextField))
                                                  data-selector="job-department-field"
                                                  error={false}
                                                  fullWidth={true}
                                                  helperText=""
                                                  id="job-department"
                                                  label="Job Department"
                                                  margin="normal"
                                                  name="job_department"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value="MOCK_DEPARTMENT"
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    data-selector="job-department-field"
                                                    error={false}
                                                    fullWidth={true}
                                                    helperText=""
                                                    id="job-department"
                                                    label="Job Department"
                                                    margin="normal"
                                                    name="job_department"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value="MOCK_DEPARTMENT"
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      data-selector="job-department-field"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      margin="normal"
                                                      required={true}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        data-selector="job-department-field"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        margin="normal"
                                                        required={true}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                          data-selector="job-department-field"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor="job-department"
                                                            id="job-department-label"
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                              htmlFor="job-department"
                                                              id="job-department-label"
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor="job-department"
                                                                id="job-department-label"
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={true}
                                                                  htmlFor="job-department"
                                                                  id="job-department-label"
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                                                    data-shrink={true}
                                                                    htmlFor="job-department"
                                                                    id="job-department-label"
                                                                  >
                                                                    Job Department
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            autoFocus={false}
                                                            fullWidth={true}
                                                            id="job-department"
                                                            label={
                                                              <React.Fragment>
                                                                Job Department
                                                                 *
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="job_department"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value="MOCK_DEPARTMENT"
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="job-department"
                                                              label={
                                                                <React.Fragment>
                                                                  Job Department
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="job_department"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value="MOCK_DEPARTMENT"
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="job-department"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="job_department"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value="MOCK_DEPARTMENT"
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="job-department"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="job_department"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value="MOCK_DEPARTMENT"
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoFocus={false}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      id="job-department"
                                                                      name="job_department"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value="MOCK_DEPARTMENT"
                                                                    />
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      label={
                                                                        <React.Fragment>
                                                                          Job Department
                                                                           *
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={true}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-7",
                                                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-8",
                                                                            "legendNotched": "PrivateNotchedOutline-legendNotched-9",
                                                                            "root": "PrivateNotchedOutline-root-6",
                                                                          }
                                                                        }
                                                                        label={
                                                                          <React.Fragment>
                                                                            Job Department
                                                                             *
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={true}
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                                                          >
                                                                            <span>
                                                                              Job Department
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                                <WithStyles(ForwardRef(Divider))
                                                  variant="fullWidth"
                                                >
                                                  <ForwardRef(Divider)
                                                    classes={
                                                      Object {
                                                        "absolute": "MuiDivider-absolute",
                                                        "flexItem": "MuiDivider-flexItem",
                                                        "inset": "MuiDivider-inset",
                                                        "light": "MuiDivider-light",
                                                        "middle": "MuiDivider-middle",
                                                        "root": "MuiDivider-root",
                                                        "vertical": "MuiDivider-vertical",
                                                      }
                                                    }
                                                    variant="fullWidth"
                                                  >
                                                    <hr
                                                      className="MuiDivider-root"
                                                    />
                                                  </ForwardRef(Divider)>
                                                </WithStyles(ForwardRef(Divider))>
                                                <div>
                                                  <WithStyles(ForwardRef(Typography))
                                                    className="makeStyles-applicantTitle-1"
                                                    variant="h6"
                                                  >
                                                    <ForwardRef(Typography)
                                                      className="makeStyles-applicantTitle-1"
                                                      classes={
                                                        Object {
                                                          "alignCenter": "MuiTypography-alignCenter",
                                                          "alignJustify": "MuiTypography-alignJustify",
                                                          "alignLeft": "MuiTypography-alignLeft",
                                                          "alignRight": "MuiTypography-alignRight",
                                                          "body1": "MuiTypography-body1",
                                                          "body2": "MuiTypography-body2",
                                                          "button": "MuiTypography-button",
                                                          "caption": "MuiTypography-caption",
                                                          "colorError": "MuiTypography-colorError",
                                                          "colorInherit": "MuiTypography-colorInherit",
                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                          "displayBlock": "MuiTypography-displayBlock",
                                                          "displayInline": "MuiTypography-displayInline",
                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                          "h1": "MuiTypography-h1",
                                                          "h2": "MuiTypography-h2",
                                                          "h3": "MuiTypography-h3",
                                                          "h4": "MuiTypography-h4",
                                                          "h5": "MuiTypography-h5",
                                                          "h6": "MuiTypography-h6",
                                                          "noWrap": "MuiTypography-noWrap",
                                                          "overline": "MuiTypography-overline",
                                                          "paragraph": "MuiTypography-paragraph",
                                                          "root": "MuiTypography-root",
                                                          "srOnly": "MuiTypography-srOnly",
                                                          "subtitle1": "MuiTypography-subtitle1",
                                                          "subtitle2": "MuiTypography-subtitle2",
                                                        }
                                                      }
                                                      variant="h6"
                                                    >
                                                      <h6
                                                        className="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                                      >
                                                        Applicants
                                                      </h6>
                                                    </ForwardRef(Typography)>
                                                  </WithStyles(ForwardRef(Typography))>
                                                  <div
                                                    className="makeStyles-applicant-2"
                                                    key="0"
                                                  >
                                                    <WithStyles(ForwardRef(Avatar))
                                                      className="makeStyles-applicantAvatar-3"
                                                      src="avatarURL"
                                                    >
                                                      <ForwardRef(Avatar)
                                                        className="makeStyles-applicantAvatar-3"
                                                        classes={
                                                          Object {
                                                            "circle": "MuiAvatar-circle",
                                                            "circular": "MuiAvatar-circular",
                                                            "colorDefault": "MuiAvatar-colorDefault",
                                                            "fallback": "MuiAvatar-fallback",
                                                            "img": "MuiAvatar-img",
                                                            "root": "MuiAvatar-root",
                                                            "rounded": "MuiAvatar-rounded",
                                                            "square": "MuiAvatar-square",
                                                          }
                                                        }
                                                        src="avatarURL"
                                                      >
                                                        <div
                                                          className="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                                        >
                                                          <img
                                                            className="MuiAvatar-img"
                                                            src="avatarURL"
                                                          />
                                                        </div>
                                                      </ForwardRef(Avatar)>
                                                    </WithStyles(ForwardRef(Avatar))>
                                                    <div>
                                                      Joe
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                        </div>
                                      </div>
                                    </ForwardRef(DialogContent)>
                                  </WithStyles(ForwardRef(DialogContent))>
                                  <WithStyles(ForwardRef(DialogActions))>
                                    <ForwardRef(DialogActions)
                                      classes={
                                        Object {
                                          "root": "MuiDialogActions-root",
                                          "spacing": "MuiDialogActions-spacing",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogActions-root MuiDialogActions-spacing"
                                      >
                                        <WithStyles(ForwardRef(Button))
                                          color="primary"
                                          data-selector="edit-form-submit"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="submit"
                                          variant="contained"
                                        >
                                          <ForwardRef(Button)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                "disableElevation": "MuiButton-disableElevation",
                                                "disabled": "Mui-disabled",
                                                "endIcon": "MuiButton-endIcon",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "startIcon": "MuiButton-startIcon",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                              }
                                            }
                                            color="primary"
                                            data-selector="edit-form-submit"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="submit"
                                            variant="contained"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                              component="button"
                                              data-selector="edit-form-submit"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                data-selector="edit-form-submit"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="submit"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                  data-selector="edit-form-submit"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="submit"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    Save
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                      </div>
                                    </ForwardRef(DialogActions)>
                                  </WithStyles(ForwardRef(DialogActions))>
                                </div>
                              </ForwardRef(DialogContent)>
                            </WithStyles(ForwardRef(DialogContent))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </div>
                  </Transition>
                </ForwardRef(Fade)>
                <div
                  data-test="sentinelEnd"
                  tabIndex={0}
                />
              </Unstable_TrapFocus>
            </div>
          </Portal>
        </ForwardRef(Portal)>
      </ForwardRef(Modal)>
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
</BlogEditor>
`;

exports[`BlogEditor should mount component successfully 1`] = `
<BlogEditor
  data={
    Object {
      "applications": Array [
        Object {
          "avatar": "avatarURL",
          "name": "Joe",
        },
      ],
      "id": "3",
      "isActive": true,
      "isHidden": true,
      "title": Object {
        "department": "MOCK_DEPARTMENT",
        "title": "MOCK_TITLE",
      },
    }
  }
  dataSelector="MOCK_DATA_SELECTOR"
  mode="edit"
  setDialogProps={[MockFunction]}
  updateBlogData={[MockFunction]}
>
  <WithStyles(ForwardRef(Dialog))
    data-selector="MOCK_DATA_SELECTOR"
    fullWidth={true}
    maxWidth="sm"
    onClose={[Function]}
    open={true}
  >
    <ForwardRef(Dialog)
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      data-selector="MOCK_DATA_SELECTOR"
      fullWidth={true}
      maxWidth="sm"
      onClose={[Function]}
      open={true}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root"
        closeAfterTransition={true}
        data-selector="MOCK_DATA_SELECTOR"
        disableBackdropClick={false}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={true}
      >
        <ForwardRef(Portal)
          disablePortal={false}
        >
          <Portal
            containerInfo={
              <body
                style="padding-right: 0px; overflow: hidden;"
              >
                <div
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Edit Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-focused Mui-focused Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <hr
                                class="MuiDivider-root"
                              />
                              <div>
                                <h6
                                  class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                >
                                  Applicants
                                </h6>
                                <div
                                  class="makeStyles-applicant-2"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                  >
                                    <img
                                      class="MuiAvatar-img"
                                      src="avatarURL"
                                    />
                                  </div>
                                  <div>
                                    Joe
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="edit-form-submit"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="MuiDialog-root"
              data-selector="MOCK_DATA_SELECTOR"
              onKeyDown={[Function]}
              role="presentation"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 1300,
                }
              }
            >
              <WithStyles(ForwardRef(Backdrop))
                onClick={[Function]}
                open={true}
                transitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
              >
                <ForwardRef(Backdrop)
                  classes={
                    Object {
                      "invisible": "MuiBackdrop-invisible",
                      "root": "MuiBackdrop-root",
                    }
                  }
                  onClick={[Function]}
                  open={true}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <ForwardRef(Fade)
                    in={true}
                    onClick={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <Transition
                      appear={true}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onClick={[Function]}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <div
                        aria-hidden={true}
                        className="MuiBackdrop-root"
                        onClick={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                            "visibility": undefined,
                          }
                        }
                      />
                    </Transition>
                  </ForwardRef(Fade)>
                </ForwardRef(Backdrop)>
              </WithStyles(ForwardRef(Backdrop))>
              <Unstable_TrapFocus
                disableAutoFocus={false}
                disableEnforceFocus={false}
                disableRestoreFocus={false}
                getDoc={[Function]}
                isEnabled={[Function]}
                open={true}
              >
                <div
                  data-test="sentinelStart"
                  tabIndex={0}
                />
                <ForwardRef(Fade)
                  appear={true}
                  in={true}
                  onEnter={[Function]}
                  onExited={[Function]}
                  role="none presentation"
                  tabIndex="-1"
                  timeout={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <Transition
                    appear={true}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    role="none presentation"
                    tabIndex="-1"
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <div
                      className="MuiDialog-container MuiDialog-scrollPaper"
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      role="none presentation"
                      style={
                        Object {
                          "opacity": 1,
                          "visibility": undefined,
                        }
                      }
                      tabIndex="-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                        elevation={24}
                        role="dialog"
                      >
                        <ForwardRef(Paper)
                          className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "outlined": "MuiPaper-outlined",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                          elevation={24}
                          role="dialog"
                        >
                          <div
                            className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                            role="dialog"
                          >
                            <WithStyles(ForwardRef(DialogContent))>
                              <ForwardRef(DialogContent)
                                classes={
                                  Object {
                                    "dividers": "MuiDialogContent-dividers",
                                    "root": "MuiDialogContent-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogContent-root"
                                >
                                  <WithStyles(ForwardRef(DialogTitle))>
                                    <ForwardRef(DialogTitle)
                                      classes={
                                        Object {
                                          "root": "MuiDialogTitle-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogTitle-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          component="h2"
                                          variant="h6"
                                        >
                                          <ForwardRef(Typography)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            component="h2"
                                            variant="h6"
                                          >
                                            <h2
                                              className="MuiTypography-root MuiTypography-h6"
                                            >
                                              Edit Job
                                            </h2>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(DialogTitle)>
                                  </WithStyles(ForwardRef(DialogTitle))>
                                  <WithStyles(ForwardRef(DialogContent))>
                                    <ForwardRef(DialogContent)
                                      classes={
                                        Object {
                                          "dividers": "MuiDialogContent-dividers",
                                          "root": "MuiDialogContent-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogContent-root"
                                      >
                                        <div>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(TextField))
                                                  autoComplete="true"
                                                  autoFocus={true}
                                                  data-selector="job-title-field"
                                                  error={false}
                                                  fullWidth={true}
                                                  helperText=""
                                                  id="job-title"
                                                  label="Job Title"
                                                  margin="normal"
                                                  name="job_title"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value="MOCK_TITLE"
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    autoComplete="true"
                                                    autoFocus={true}
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    data-selector="job-title-field"
                                                    error={false}
                                                    fullWidth={true}
                                                    helperText=""
                                                    id="job-title"
                                                    label="Job Title"
                                                    margin="normal"
                                                    name="job_title"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value="MOCK_TITLE"
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      data-selector="job-title-field"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      margin="normal"
                                                      required={true}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        data-selector="job-title-field"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        margin="normal"
                                                        required={true}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                          data-selector="job-title-field"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor="job-title"
                                                            id="job-title-label"
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                              htmlFor="job-title"
                                                              id="job-title-label"
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor="job-title"
                                                                id="job-title-label"
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={true}
                                                                  htmlFor="job-title"
                                                                  id="job-title-label"
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-focused Mui-focused Mui-required Mui-required"
                                                                    data-shrink={true}
                                                                    htmlFor="job-title"
                                                                    id="job-title-label"
                                                                  >
                                                                    Job Title
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            autoComplete="true"
                                                            autoFocus={true}
                                                            fullWidth={true}
                                                            id="job-title"
                                                            label={
                                                              <React.Fragment>
                                                                Job Title
                                                                 *
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="job_title"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value="MOCK_TITLE"
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoComplete="true"
                                                              autoFocus={true}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="job-title"
                                                              label={
                                                                <React.Fragment>
                                                                  Job Title
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="job_title"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value="MOCK_TITLE"
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoComplete="true"
                                                                autoFocus={true}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="job-title"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="job_title"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value="MOCK_TITLE"
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoComplete="true"
                                                                  autoFocus={true}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="job-title"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="job_title"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value="MOCK_TITLE"
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoComplete="true"
                                                                      autoFocus={true}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      id="job-title"
                                                                      name="job_title"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value="MOCK_TITLE"
                                                                    />
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      label={
                                                                        <React.Fragment>
                                                                          Job Title
                                                                           *
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={true}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-7",
                                                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-8",
                                                                            "legendNotched": "PrivateNotchedOutline-legendNotched-9",
                                                                            "root": "PrivateNotchedOutline-root-6",
                                                                          }
                                                                        }
                                                                        label={
                                                                          <React.Fragment>
                                                                            Job Title
                                                                             *
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={true}
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                                                          >
                                                                            <span>
                                                                              Job Title
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                                <WithStyles(ForwardRef(TextField))
                                                  data-selector="job-department-field"
                                                  error={false}
                                                  fullWidth={true}
                                                  helperText=""
                                                  id="job-department"
                                                  label="Job Department"
                                                  margin="normal"
                                                  name="job_department"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value="MOCK_DEPARTMENT"
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    data-selector="job-department-field"
                                                    error={false}
                                                    fullWidth={true}
                                                    helperText=""
                                                    id="job-department"
                                                    label="Job Department"
                                                    margin="normal"
                                                    name="job_department"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value="MOCK_DEPARTMENT"
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      data-selector="job-department-field"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      margin="normal"
                                                      required={true}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        data-selector="job-department-field"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        margin="normal"
                                                        required={true}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                          data-selector="job-department-field"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor="job-department"
                                                            id="job-department-label"
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                              htmlFor="job-department"
                                                              id="job-department-label"
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor="job-department"
                                                                id="job-department-label"
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={true}
                                                                  htmlFor="job-department"
                                                                  id="job-department-label"
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                                                    data-shrink={true}
                                                                    htmlFor="job-department"
                                                                    id="job-department-label"
                                                                  >
                                                                    Job Department
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            autoFocus={false}
                                                            fullWidth={true}
                                                            id="job-department"
                                                            label={
                                                              <React.Fragment>
                                                                Job Department
                                                                 *
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="job_department"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value="MOCK_DEPARTMENT"
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="job-department"
                                                              label={
                                                                <React.Fragment>
                                                                  Job Department
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="job_department"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value="MOCK_DEPARTMENT"
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="job-department"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="job_department"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value="MOCK_DEPARTMENT"
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="job-department"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="job_department"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value="MOCK_DEPARTMENT"
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoFocus={false}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      id="job-department"
                                                                      name="job_department"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value="MOCK_DEPARTMENT"
                                                                    />
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      label={
                                                                        <React.Fragment>
                                                                          Job Department
                                                                           *
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={true}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-7",
                                                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-8",
                                                                            "legendNotched": "PrivateNotchedOutline-legendNotched-9",
                                                                            "root": "PrivateNotchedOutline-root-6",
                                                                          }
                                                                        }
                                                                        label={
                                                                          <React.Fragment>
                                                                            Job Department
                                                                             *
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={true}
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                                                          >
                                                                            <span>
                                                                              Job Department
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                                <WithStyles(ForwardRef(Divider))
                                                  variant="fullWidth"
                                                >
                                                  <ForwardRef(Divider)
                                                    classes={
                                                      Object {
                                                        "absolute": "MuiDivider-absolute",
                                                        "flexItem": "MuiDivider-flexItem",
                                                        "inset": "MuiDivider-inset",
                                                        "light": "MuiDivider-light",
                                                        "middle": "MuiDivider-middle",
                                                        "root": "MuiDivider-root",
                                                        "vertical": "MuiDivider-vertical",
                                                      }
                                                    }
                                                    variant="fullWidth"
                                                  >
                                                    <hr
                                                      className="MuiDivider-root"
                                                    />
                                                  </ForwardRef(Divider)>
                                                </WithStyles(ForwardRef(Divider))>
                                                <div>
                                                  <WithStyles(ForwardRef(Typography))
                                                    className="makeStyles-applicantTitle-1"
                                                    variant="h6"
                                                  >
                                                    <ForwardRef(Typography)
                                                      className="makeStyles-applicantTitle-1"
                                                      classes={
                                                        Object {
                                                          "alignCenter": "MuiTypography-alignCenter",
                                                          "alignJustify": "MuiTypography-alignJustify",
                                                          "alignLeft": "MuiTypography-alignLeft",
                                                          "alignRight": "MuiTypography-alignRight",
                                                          "body1": "MuiTypography-body1",
                                                          "body2": "MuiTypography-body2",
                                                          "button": "MuiTypography-button",
                                                          "caption": "MuiTypography-caption",
                                                          "colorError": "MuiTypography-colorError",
                                                          "colorInherit": "MuiTypography-colorInherit",
                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                          "displayBlock": "MuiTypography-displayBlock",
                                                          "displayInline": "MuiTypography-displayInline",
                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                          "h1": "MuiTypography-h1",
                                                          "h2": "MuiTypography-h2",
                                                          "h3": "MuiTypography-h3",
                                                          "h4": "MuiTypography-h4",
                                                          "h5": "MuiTypography-h5",
                                                          "h6": "MuiTypography-h6",
                                                          "noWrap": "MuiTypography-noWrap",
                                                          "overline": "MuiTypography-overline",
                                                          "paragraph": "MuiTypography-paragraph",
                                                          "root": "MuiTypography-root",
                                                          "srOnly": "MuiTypography-srOnly",
                                                          "subtitle1": "MuiTypography-subtitle1",
                                                          "subtitle2": "MuiTypography-subtitle2",
                                                        }
                                                      }
                                                      variant="h6"
                                                    >
                                                      <h6
                                                        className="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                                      >
                                                        Applicants
                                                      </h6>
                                                    </ForwardRef(Typography)>
                                                  </WithStyles(ForwardRef(Typography))>
                                                  <div
                                                    className="makeStyles-applicant-2"
                                                    key="0"
                                                  >
                                                    <WithStyles(ForwardRef(Avatar))
                                                      className="makeStyles-applicantAvatar-3"
                                                      src="avatarURL"
                                                    >
                                                      <ForwardRef(Avatar)
                                                        className="makeStyles-applicantAvatar-3"
                                                        classes={
                                                          Object {
                                                            "circle": "MuiAvatar-circle",
                                                            "circular": "MuiAvatar-circular",
                                                            "colorDefault": "MuiAvatar-colorDefault",
                                                            "fallback": "MuiAvatar-fallback",
                                                            "img": "MuiAvatar-img",
                                                            "root": "MuiAvatar-root",
                                                            "rounded": "MuiAvatar-rounded",
                                                            "square": "MuiAvatar-square",
                                                          }
                                                        }
                                                        src="avatarURL"
                                                      >
                                                        <div
                                                          className="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                                        >
                                                          <img
                                                            className="MuiAvatar-img"
                                                            src="avatarURL"
                                                          />
                                                        </div>
                                                      </ForwardRef(Avatar)>
                                                    </WithStyles(ForwardRef(Avatar))>
                                                    <div>
                                                      Joe
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                        </div>
                                      </div>
                                    </ForwardRef(DialogContent)>
                                  </WithStyles(ForwardRef(DialogContent))>
                                  <WithStyles(ForwardRef(DialogActions))>
                                    <ForwardRef(DialogActions)
                                      classes={
                                        Object {
                                          "root": "MuiDialogActions-root",
                                          "spacing": "MuiDialogActions-spacing",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogActions-root MuiDialogActions-spacing"
                                      >
                                        <WithStyles(ForwardRef(Button))
                                          color="primary"
                                          data-selector="edit-form-submit"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="submit"
                                          variant="contained"
                                        >
                                          <ForwardRef(Button)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                "disableElevation": "MuiButton-disableElevation",
                                                "disabled": "Mui-disabled",
                                                "endIcon": "MuiButton-endIcon",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "startIcon": "MuiButton-startIcon",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                              }
                                            }
                                            color="primary"
                                            data-selector="edit-form-submit"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="submit"
                                            variant="contained"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                              component="button"
                                              data-selector="edit-form-submit"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                data-selector="edit-form-submit"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="submit"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                  data-selector="edit-form-submit"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="submit"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    Save
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                      </div>
                                    </ForwardRef(DialogActions)>
                                  </WithStyles(ForwardRef(DialogActions))>
                                </div>
                              </ForwardRef(DialogContent)>
                            </WithStyles(ForwardRef(DialogContent))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </div>
                  </Transition>
                </ForwardRef(Fade)>
                <div
                  data-test="sentinelEnd"
                  tabIndex={0}
                />
              </Unstable_TrapFocus>
            </div>
          </Portal>
        </ForwardRef(Portal)>
      </ForwardRef(Modal)>
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
</BlogEditor>
`;

exports[`BlogEditor should mount component successfully with default values 1`] = `
<BlogEditor>
  <WithStyles(ForwardRef(Dialog))
    data-selector=""
    fullWidth={true}
    maxWidth="sm"
    onClose={[Function]}
    open={true}
  >
    <ForwardRef(Dialog)
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      data-selector=""
      fullWidth={true}
      maxWidth="sm"
      onClose={[Function]}
      open={true}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root"
        closeAfterTransition={true}
        data-selector=""
        disableBackdropClick={false}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={true}
      >
        <ForwardRef(Portal)
          disablePortal={false}
        >
          <Portal
            containerInfo={
              <body
                style="padding-right: 0px; overflow: hidden;"
              >
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Edit Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <hr
                                class="MuiDivider-root"
                              />
                              <div>
                                <h6
                                  class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                >
                                  Applicants
                                </h6>
                                <div
                                  class="makeStyles-applicant-2"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                  >
                                    <img
                                      class="MuiAvatar-img"
                                      src="avatarURL"
                                    />
                                  </div>
                                  <div>
                                    Joe
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="edit-form-submit"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  class="MuiDialog-root"
                  data-selector=""
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined Mui-focused Mui-focused Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined Mui-required Mui-required"
                                  data-shrink="false"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="submit-addForm"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                            data-selector="submit-addForm-draft"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="MuiDialog-root"
              data-selector=""
              onKeyDown={[Function]}
              role="presentation"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 1300,
                }
              }
            >
              <WithStyles(ForwardRef(Backdrop))
                onClick={[Function]}
                open={true}
                transitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
              >
                <ForwardRef(Backdrop)
                  classes={
                    Object {
                      "invisible": "MuiBackdrop-invisible",
                      "root": "MuiBackdrop-root",
                    }
                  }
                  onClick={[Function]}
                  open={true}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <ForwardRef(Fade)
                    in={true}
                    onClick={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <Transition
                      appear={true}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onClick={[Function]}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <div
                        aria-hidden={true}
                        className="MuiBackdrop-root"
                        onClick={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                            "visibility": undefined,
                          }
                        }
                      />
                    </Transition>
                  </ForwardRef(Fade)>
                </ForwardRef(Backdrop)>
              </WithStyles(ForwardRef(Backdrop))>
              <Unstable_TrapFocus
                disableAutoFocus={false}
                disableEnforceFocus={false}
                disableRestoreFocus={false}
                getDoc={[Function]}
                isEnabled={[Function]}
                open={true}
              >
                <div
                  data-test="sentinelStart"
                  tabIndex={0}
                />
                <ForwardRef(Fade)
                  appear={true}
                  in={true}
                  onEnter={[Function]}
                  onExited={[Function]}
                  role="none presentation"
                  tabIndex="-1"
                  timeout={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <Transition
                    appear={true}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    role="none presentation"
                    tabIndex="-1"
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <div
                      className="MuiDialog-container MuiDialog-scrollPaper"
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      role="none presentation"
                      style={
                        Object {
                          "opacity": 1,
                          "visibility": undefined,
                        }
                      }
                      tabIndex="-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                        elevation={24}
                        role="dialog"
                      >
                        <ForwardRef(Paper)
                          className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "outlined": "MuiPaper-outlined",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                          elevation={24}
                          role="dialog"
                        >
                          <div
                            className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                            role="dialog"
                          >
                            <WithStyles(ForwardRef(DialogContent))>
                              <ForwardRef(DialogContent)
                                classes={
                                  Object {
                                    "dividers": "MuiDialogContent-dividers",
                                    "root": "MuiDialogContent-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogContent-root"
                                >
                                  <WithStyles(ForwardRef(DialogTitle))>
                                    <ForwardRef(DialogTitle)
                                      classes={
                                        Object {
                                          "root": "MuiDialogTitle-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogTitle-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          component="h2"
                                          variant="h6"
                                        >
                                          <ForwardRef(Typography)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            component="h2"
                                            variant="h6"
                                          >
                                            <h2
                                              className="MuiTypography-root MuiTypography-h6"
                                            >
                                              Add Job
                                            </h2>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(DialogTitle)>
                                  </WithStyles(ForwardRef(DialogTitle))>
                                  <WithStyles(ForwardRef(DialogContent))>
                                    <ForwardRef(DialogContent)
                                      classes={
                                        Object {
                                          "dividers": "MuiDialogContent-dividers",
                                          "root": "MuiDialogContent-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogContent-root"
                                      >
                                        <div>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(TextField))
                                                  autoComplete="true"
                                                  autoFocus={true}
                                                  data-selector="job-title-field"
                                                  error={false}
                                                  fullWidth={true}
                                                  helperText=""
                                                  id="job-title"
                                                  label="Job Title"
                                                  margin="normal"
                                                  name="job_title"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value=""
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    autoComplete="true"
                                                    autoFocus={true}
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    data-selector="job-title-field"
                                                    error={false}
                                                    fullWidth={true}
                                                    helperText=""
                                                    id="job-title"
                                                    label="Job Title"
                                                    margin="normal"
                                                    name="job_title"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value=""
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      data-selector="job-title-field"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      margin="normal"
                                                      required={true}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        data-selector="job-title-field"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        margin="normal"
                                                        required={true}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                          data-selector="job-title-field"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor="job-title"
                                                            id="job-title-label"
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                              htmlFor="job-title"
                                                              id="job-title-label"
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor="job-title"
                                                                id="job-title-label"
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={true}
                                                                  htmlFor="job-title"
                                                                  id="job-title-label"
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined Mui-focused Mui-focused Mui-required Mui-required"
                                                                    data-shrink={true}
                                                                    htmlFor="job-title"
                                                                    id="job-title-label"
                                                                  >
                                                                    Job Title
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            autoComplete="true"
                                                            autoFocus={true}
                                                            fullWidth={true}
                                                            id="job-title"
                                                            label={
                                                              <React.Fragment>
                                                                Job Title
                                                                 *
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="job_title"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoComplete="true"
                                                              autoFocus={true}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="job-title"
                                                              label={
                                                                <React.Fragment>
                                                                  Job Title
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="job_title"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value=""
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoComplete="true"
                                                                autoFocus={true}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="job-title"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="job_title"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoComplete="true"
                                                                  autoFocus={true}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="job-title"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="job_title"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoComplete="true"
                                                                      autoFocus={true}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      id="job-title"
                                                                      name="job_title"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      label={
                                                                        <React.Fragment>
                                                                          Job Title
                                                                           *
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={true}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-7",
                                                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-8",
                                                                            "legendNotched": "PrivateNotchedOutline-legendNotched-9",
                                                                            "root": "PrivateNotchedOutline-root-6",
                                                                          }
                                                                        }
                                                                        label={
                                                                          <React.Fragment>
                                                                            Job Title
                                                                             *
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={true}
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                                                          >
                                                                            <span>
                                                                              Job Title
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                                <WithStyles(ForwardRef(TextField))
                                                  data-selector="job-department-field"
                                                  error={false}
                                                  fullWidth={true}
                                                  helperText=""
                                                  id="job-department"
                                                  label="Job Department"
                                                  margin="normal"
                                                  name="job_department"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value=""
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    data-selector="job-department-field"
                                                    error={false}
                                                    fullWidth={true}
                                                    helperText=""
                                                    id="job-department"
                                                    label="Job Department"
                                                    margin="normal"
                                                    name="job_department"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value=""
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      data-selector="job-department-field"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      margin="normal"
                                                      required={true}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        data-selector="job-department-field"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        margin="normal"
                                                        required={true}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                          data-selector="job-department-field"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor="job-department"
                                                            id="job-department-label"
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                              htmlFor="job-department"
                                                              id="job-department-label"
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                                htmlFor="job-department"
                                                                id="job-department-label"
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={false}
                                                                  htmlFor="job-department"
                                                                  id="job-department-label"
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined Mui-required Mui-required"
                                                                    data-shrink={false}
                                                                    htmlFor="job-department"
                                                                    id="job-department-label"
                                                                  >
                                                                    Job Department
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            autoFocus={false}
                                                            fullWidth={true}
                                                            id="job-department"
                                                            label={
                                                              <React.Fragment>
                                                                Job Department
                                                                 *
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="job_department"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="job-department"
                                                              label={
                                                                <React.Fragment>
                                                                  Job Department
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="job_department"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value=""
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="job-department"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="job_department"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="job-department"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="job_department"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoFocus={false}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      id="job-department"
                                                                      name="job_department"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      label={
                                                                        <React.Fragment>
                                                                          Job Department
                                                                           *
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-7",
                                                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-8",
                                                                            "legendNotched": "PrivateNotchedOutline-legendNotched-9",
                                                                            "root": "PrivateNotchedOutline-root-6",
                                                                          }
                                                                        }
                                                                        label={
                                                                          <React.Fragment>
                                                                            Job Department
                                                                             *
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={false}
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legendLabelled-8"
                                                                          >
                                                                            <span>
                                                                              Job Department
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                        </div>
                                      </div>
                                    </ForwardRef(DialogContent)>
                                  </WithStyles(ForwardRef(DialogContent))>
                                  <WithStyles(ForwardRef(DialogActions))>
                                    <ForwardRef(DialogActions)
                                      classes={
                                        Object {
                                          "root": "MuiDialogActions-root",
                                          "spacing": "MuiDialogActions-spacing",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogActions-root MuiDialogActions-spacing"
                                      >
                                        <WithStyles(ForwardRef(Button))
                                          color="primary"
                                          data-selector="submit-addForm"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="submit"
                                          variant="contained"
                                        >
                                          <ForwardRef(Button)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                "disableElevation": "MuiButton-disableElevation",
                                                "disabled": "Mui-disabled",
                                                "endIcon": "MuiButton-endIcon",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "startIcon": "MuiButton-startIcon",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                              }
                                            }
                                            color="primary"
                                            data-selector="submit-addForm"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="submit"
                                            variant="contained"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                              component="button"
                                              data-selector="submit-addForm"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                data-selector="submit-addForm"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="submit"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                  data-selector="submit-addForm"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="submit"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    Add
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                        <WithStyles(ForwardRef(Button))
                                          color="secondary"
                                          data-selector="submit-addForm-draft"
                                          disabled={false}
                                          onClick={[Function]}
                                          variant="text"
                                        >
                                          <ForwardRef(Button)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                "disableElevation": "MuiButton-disableElevation",
                                                "disabled": "Mui-disabled",
                                                "endIcon": "MuiButton-endIcon",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "startIcon": "MuiButton-startIcon",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                              }
                                            }
                                            color="secondary"
                                            data-selector="submit-addForm-draft"
                                            disabled={false}
                                            onClick={[Function]}
                                            variant="text"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-text MuiButton-textSecondary"
                                              component="button"
                                              data-selector="submit-addForm-draft"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-text MuiButton-textSecondary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                data-selector="submit-addForm-draft"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                                                  data-selector="submit-addForm-draft"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    Save as draft
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                      </div>
                                    </ForwardRef(DialogActions)>
                                  </WithStyles(ForwardRef(DialogActions))>
                                </div>
                              </ForwardRef(DialogContent)>
                            </WithStyles(ForwardRef(DialogContent))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </div>
                  </Transition>
                </ForwardRef(Fade)>
                <div
                  data-test="sentinelEnd"
                  tabIndex={0}
                />
              </Unstable_TrapFocus>
            </div>
          </Portal>
        </ForwardRef(Portal)>
      </ForwardRef(Modal)>
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
</BlogEditor>
`;

exports[`BlogEditor should render view modal 1`] = `
<BlogEditor
  data={
    Object {
      "applications": Array [
        Object {
          "avatar": "avatarURL",
          "name": "Joe",
        },
      ],
      "id": "3",
      "isActive": true,
      "isHidden": true,
      "title": Object {
        "department": "MOCK_DEPARTMENT",
        "title": "MOCK_TITLE",
      },
    }
  }
  dataSelector="MOCK_DATA_SELECTOR"
  mode="view"
  setDialogProps={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
        Array [
          Object {
            "data": Object {},
            "mode": null,
            "open": false,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updateBlogData={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "id": "3",
          },
        ],
        Array [
          Object {
            "id": "3",
          },
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <WithStyles(ForwardRef(Dialog))
    data-selector="MOCK_DATA_SELECTOR"
    fullWidth={true}
    maxWidth="sm"
    onClose={[Function]}
    open={true}
  >
    <ForwardRef(Dialog)
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      data-selector="MOCK_DATA_SELECTOR"
      fullWidth={true}
      maxWidth="sm"
      onClose={[Function]}
      open={true}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root"
        closeAfterTransition={true}
        data-selector="MOCK_DATA_SELECTOR"
        disableBackdropClick={false}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={true}
      >
        <ForwardRef(Portal)
          disablePortal={false}
        >
          <Portal
            containerInfo={
              <body
                style="padding-right: 0px; overflow: hidden;"
              >
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Edit Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <hr
                                class="MuiDivider-root"
                              />
                              <div>
                                <h6
                                  class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                >
                                  Applicants
                                </h6>
                                <div
                                  class="makeStyles-applicant-2"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                  >
                                    <img
                                      class="MuiAvatar-img"
                                      src="avatarURL"
                                    />
                                  </div>
                                  <div>
                                    Joe
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="edit-form-submit"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector=""
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined Mui-error Mui-error Mui-required Mui-required"
                                  data-shrink="false"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk Mui-error Mui-error"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root Mui-error Mui-error MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-describedby="job-title-helper-text"
                                    aria-invalid="true"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                <p
                                  class="MuiFormHelperText-root MuiFormHelperText-contained Mui-error Mui-required"
                                  id="job-title-helper-text"
                                >
                                  This is required field
                                </p>
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined Mui-required Mui-required"
                                  data-shrink="false"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled Mui-disabled"
                            data-selector="submit-addForm"
                            disabled=""
                            tabindex="-1"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary Mui-disabled Mui-disabled"
                            data-selector="submit-addForm-draft"
                            disabled=""
                            tabindex="-1"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Add Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="submit-addForm"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Add
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                            data-selector="submit-addForm-draft"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save as draft
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Edit Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <hr
                                class="MuiDivider-root"
                              />
                              <div>
                                <h6
                                  class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                >
                                  Applicants
                                </h6>
                                <div
                                  class="makeStyles-applicant-2"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                  >
                                    <img
                                      class="MuiAvatar-img"
                                      src="avatarURL"
                                    />
                                  </div>
                                  <div>
                                    Joe
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="edit-form-submit"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            Edit Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div>
                            <div
                              class="MuiFormControl-root MuiFormControl-fullWidth"
                            >
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-title-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-title"
                                  id="job-title-label"
                                >
                                  Job Title
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    autocomplete="true"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-title"
                                    name="job_title"
                                    required=""
                                    type="text"
                                    value="MOCK_TITLE"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Title
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <div
                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                data-selector="job-department-field"
                              >
                                <label
                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled Mui-required Mui-required"
                                  data-shrink="true"
                                  for="job-department"
                                  id="job-department-label"
                                >
                                  Job Department
                                  <span
                                    aria-hidden="true"
                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                  >
                                     
                                    *
                                  </span>
                                </label>
                                <div
                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                >
                                  <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiOutlinedInput-input"
                                    id="job-department"
                                    name="job_department"
                                    required=""
                                    type="text"
                                    value="MOCK_DEPARTMENT"
                                  />
                                  <fieldset
                                    aria-hidden="true"
                                    class="PrivateNotchedOutline-root-6 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      class="PrivateNotchedOutline-legendLabelled-8 PrivateNotchedOutline-legendNotched-9"
                                    >
                                      <span>
                                        Job Department
                                         *
                                      </span>
                                    </legend>
                                  </fieldset>
                                </div>
                                
                              </div>
                              <hr
                                class="MuiDivider-root"
                              />
                              <div>
                                <h6
                                  class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                >
                                  Applicants
                                </h6>
                                <div
                                  class="makeStyles-applicant-2"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                  >
                                    <img
                                      class="MuiAvatar-img"
                                      src="avatarURL"
                                    />
                                  </div>
                                  <div>
                                    Joe
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            data-selector="edit-form-submit"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Save
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  class="MuiDialog-root"
                  data-selector="MOCK_DATA_SELECTOR"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogContent-root"
                      >
                        <div
                          class="MuiDialogTitle-root"
                        >
                          <h2
                            class="MuiTypography-root MuiTypography-h6"
                          >
                            View Job
                          </h2>
                        </div>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <div
                            class="makeStyles-formGroup-4"
                          >
                            <h6
                              class="MuiTypography-root makeStyles-formGroupTitle-5 MuiTypography-h6"
                            >
                              Job Title
                            </h6>
                            <p
                              class="MuiTypography-root MuiTypography-body1"
                            >
                              MOCK_TITLE
                            </p>
                          </div>
                          <div
                            class="makeStyles-formGroup-4"
                          >
                            <h6
                              class="MuiTypography-root makeStyles-formGroupTitle-5 MuiTypography-h6"
                            >
                              Job Department
                            </h6>
                            <p
                              class="MuiTypography-root MuiTypography-body1"
                            >
                              MOCK_DEPARTMENT
                            </p>
                          </div>
                          <div
                            class="makeStyles-formGroup-4"
                          >
                            <h6
                              class="MuiTypography-root makeStyles-formGroupTitle-5 MuiTypography-h6"
                            >
                              Posted On
                            </h6>
                            <p
                              class="MuiTypography-root MuiTypography-body1"
                            >
                              NaN undefined NaN
                            </p>
                          </div>
                          <div
                            class="makeStyles-formGroup-4"
                          >
                            <h6
                              class="MuiTypography-root makeStyles-formGroupTitle-5 MuiTypography-h6"
                            >
                              Is Active
                            </h6>
                            <p
                              class="MuiTypography-root MuiTypography-body1"
                            >
                              Yes
                            </p>
                          </div>
                          <div>
                            <h6
                              class="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                            >
                              Applicants
                            </h6>
                            <div
                              class="makeStyles-applicant-2"
                            >
                              <div
                                class="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                              >
                                <img
                                  class="MuiAvatar-img"
                                  src="avatarURL"
                                />
                              </div>
                              <div>
                                Joe
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="MuiDialogActions-root MuiDialogActions-spacing"
                        >
                          <button
                            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            tabindex="0"
                            type="submit"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              Close
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="MuiDialog-root"
              data-selector="MOCK_DATA_SELECTOR"
              onKeyDown={[Function]}
              role="presentation"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 1300,
                }
              }
            >
              <WithStyles(ForwardRef(Backdrop))
                onClick={[Function]}
                open={true}
                transitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
              >
                <ForwardRef(Backdrop)
                  classes={
                    Object {
                      "invisible": "MuiBackdrop-invisible",
                      "root": "MuiBackdrop-root",
                    }
                  }
                  onClick={[Function]}
                  open={true}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <ForwardRef(Fade)
                    in={true}
                    onClick={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <Transition
                      appear={true}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onClick={[Function]}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <div
                        aria-hidden={true}
                        className="MuiBackdrop-root"
                        onClick={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                            "visibility": undefined,
                          }
                        }
                      />
                    </Transition>
                  </ForwardRef(Fade)>
                </ForwardRef(Backdrop)>
              </WithStyles(ForwardRef(Backdrop))>
              <Unstable_TrapFocus
                disableAutoFocus={false}
                disableEnforceFocus={false}
                disableRestoreFocus={false}
                getDoc={[Function]}
                isEnabled={[Function]}
                open={true}
              >
                <div
                  data-test="sentinelStart"
                  tabIndex={0}
                />
                <ForwardRef(Fade)
                  appear={true}
                  in={true}
                  onEnter={[Function]}
                  onExited={[Function]}
                  role="none presentation"
                  tabIndex="-1"
                  timeout={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <Transition
                    appear={true}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    role="none presentation"
                    tabIndex="-1"
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <div
                      className="MuiDialog-container MuiDialog-scrollPaper"
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      role="none presentation"
                      style={
                        Object {
                          "opacity": 1,
                          "visibility": undefined,
                        }
                      }
                      tabIndex="-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                        elevation={24}
                        role="dialog"
                      >
                        <ForwardRef(Paper)
                          className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "outlined": "MuiPaper-outlined",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                          elevation={24}
                          role="dialog"
                        >
                          <div
                            className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullWidth MuiPaper-elevation24 MuiPaper-rounded"
                            role="dialog"
                          >
                            <WithStyles(ForwardRef(DialogContent))>
                              <ForwardRef(DialogContent)
                                classes={
                                  Object {
                                    "dividers": "MuiDialogContent-dividers",
                                    "root": "MuiDialogContent-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogContent-root"
                                >
                                  <WithStyles(ForwardRef(DialogTitle))>
                                    <ForwardRef(DialogTitle)
                                      classes={
                                        Object {
                                          "root": "MuiDialogTitle-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogTitle-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          component="h2"
                                          variant="h6"
                                        >
                                          <ForwardRef(Typography)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            component="h2"
                                            variant="h6"
                                          >
                                            <h2
                                              className="MuiTypography-root MuiTypography-h6"
                                            >
                                              View Job
                                            </h2>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(DialogTitle)>
                                  </WithStyles(ForwardRef(DialogTitle))>
                                  <WithStyles(ForwardRef(DialogContent))>
                                    <ForwardRef(DialogContent)
                                      classes={
                                        Object {
                                          "dividers": "MuiDialogContent-dividers",
                                          "root": "MuiDialogContent-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogContent-root"
                                      >
                                        <div
                                          className="makeStyles-formGroup-4"
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            className="makeStyles-formGroupTitle-5"
                                            variant="h6"
                                          >
                                            <ForwardRef(Typography)
                                              className="makeStyles-formGroupTitle-5"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              variant="h6"
                                            >
                                              <h6
                                                className="MuiTypography-root makeStyles-formGroupTitle-5 MuiTypography-h6"
                                              >
                                                Job Title
                                              </h6>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                          <WithStyles(ForwardRef(Typography))
                                            variant="body1"
                                          >
                                            <ForwardRef(Typography)
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              variant="body1"
                                            >
                                              <p
                                                className="MuiTypography-root MuiTypography-body1"
                                              >
                                                MOCK_TITLE
                                              </p>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                        <div
                                          className="makeStyles-formGroup-4"
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            className="makeStyles-formGroupTitle-5"
                                            variant="h6"
                                          >
                                            <ForwardRef(Typography)
                                              className="makeStyles-formGroupTitle-5"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              variant="h6"
                                            >
                                              <h6
                                                className="MuiTypography-root makeStyles-formGroupTitle-5 MuiTypography-h6"
                                              >
                                                Job Department
                                              </h6>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                          <WithStyles(ForwardRef(Typography))
                                            variant="body1"
                                          >
                                            <ForwardRef(Typography)
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              variant="body1"
                                            >
                                              <p
                                                className="MuiTypography-root MuiTypography-body1"
                                              >
                                                MOCK_DEPARTMENT
                                              </p>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                        <div
                                          className="makeStyles-formGroup-4"
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            className="makeStyles-formGroupTitle-5"
                                            variant="h6"
                                          >
                                            <ForwardRef(Typography)
                                              className="makeStyles-formGroupTitle-5"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              variant="h6"
                                            >
                                              <h6
                                                className="MuiTypography-root makeStyles-formGroupTitle-5 MuiTypography-h6"
                                              >
                                                Posted On
                                              </h6>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                          <WithStyles(ForwardRef(Typography))
                                            variant="body1"
                                          >
                                            <ForwardRef(Typography)
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              variant="body1"
                                            >
                                              <p
                                                className="MuiTypography-root MuiTypography-body1"
                                              >
                                                NaN undefined NaN
                                              </p>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                        <div
                                          className="makeStyles-formGroup-4"
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            className="makeStyles-formGroupTitle-5"
                                            variant="h6"
                                          >
                                            <ForwardRef(Typography)
                                              className="makeStyles-formGroupTitle-5"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              variant="h6"
                                            >
                                              <h6
                                                className="MuiTypography-root makeStyles-formGroupTitle-5 MuiTypography-h6"
                                              >
                                                Is Active
                                              </h6>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                          <WithStyles(ForwardRef(Typography))
                                            variant="body1"
                                          >
                                            <ForwardRef(Typography)
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              variant="body1"
                                            >
                                              <p
                                                className="MuiTypography-root MuiTypography-body1"
                                              >
                                                Yes
                                              </p>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                        <div>
                                          <WithStyles(ForwardRef(Typography))
                                            className="makeStyles-applicantTitle-1"
                                            variant="h6"
                                          >
                                            <ForwardRef(Typography)
                                              className="makeStyles-applicantTitle-1"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              variant="h6"
                                            >
                                              <h6
                                                className="MuiTypography-root makeStyles-applicantTitle-1 MuiTypography-h6"
                                              >
                                                Applicants
                                              </h6>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                          <div
                                            className="makeStyles-applicant-2"
                                            key="0"
                                          >
                                            <WithStyles(ForwardRef(Avatar))
                                              className="makeStyles-applicantAvatar-3"
                                              src="avatarURL"
                                            >
                                              <ForwardRef(Avatar)
                                                className="makeStyles-applicantAvatar-3"
                                                classes={
                                                  Object {
                                                    "circle": "MuiAvatar-circle",
                                                    "circular": "MuiAvatar-circular",
                                                    "colorDefault": "MuiAvatar-colorDefault",
                                                    "fallback": "MuiAvatar-fallback",
                                                    "img": "MuiAvatar-img",
                                                    "root": "MuiAvatar-root",
                                                    "rounded": "MuiAvatar-rounded",
                                                    "square": "MuiAvatar-square",
                                                  }
                                                }
                                                src="avatarURL"
                                              >
                                                <div
                                                  className="MuiAvatar-root MuiAvatar-circle makeStyles-applicantAvatar-3"
                                                >
                                                  <img
                                                    className="MuiAvatar-img"
                                                    src="avatarURL"
                                                  />
                                                </div>
                                              </ForwardRef(Avatar)>
                                            </WithStyles(ForwardRef(Avatar))>
                                            <div>
                                              Joe
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </ForwardRef(DialogContent)>
                                  </WithStyles(ForwardRef(DialogContent))>
                                  <WithStyles(ForwardRef(DialogActions))>
                                    <ForwardRef(DialogActions)
                                      classes={
                                        Object {
                                          "root": "MuiDialogActions-root",
                                          "spacing": "MuiDialogActions-spacing",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogActions-root MuiDialogActions-spacing"
                                      >
                                        <WithStyles(ForwardRef(Button))
                                          color="primary"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="submit"
                                          variant="contained"
                                        >
                                          <ForwardRef(Button)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                "disableElevation": "MuiButton-disableElevation",
                                                "disabled": "Mui-disabled",
                                                "endIcon": "MuiButton-endIcon",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "startIcon": "MuiButton-startIcon",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                              }
                                            }
                                            color="primary"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="submit"
                                            variant="contained"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                              component="button"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="submit"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="submit"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    Close
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                      </div>
                                    </ForwardRef(DialogActions)>
                                  </WithStyles(ForwardRef(DialogActions))>
                                </div>
                              </ForwardRef(DialogContent)>
                            </WithStyles(ForwardRef(DialogContent))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </div>
                  </Transition>
                </ForwardRef(Fade)>
                <div
                  data-test="sentinelEnd"
                  tabIndex={0}
                />
              </Unstable_TrapFocus>
            </div>
          </Portal>
        </ForwardRef(Portal)>
      </ForwardRef(Modal)>
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
</BlogEditor>
`;
